#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
typedef struct Node {
int data;
struct Node* next;
} Node;
typedef struct {
Node* top;
} Stack;
void initStack(Stack* s) {
s->top = NULL;
}
int isEmpty(Stack* s) {
return s->top == NULL;
}
void push(Stack* s, int value) {
Node* newNode = (Node*)malloc(sizeof(Node));
newNode->data = value;
newNode->next = s->top;
s->top = newNode;
}
int pop(Stack* s) {
if (!isEmpty(s)) {
Node* temp = s->top;
int poppedValue = temp->data;
s->top = s->top->next;
free(temp);
return poppedValue;
}
return -1;
}
int evaluatePostfix(char* expression) {
Stack s;
initStack(&s);
for (int i = 0; i < strlen(expression); i++) {
if (isdigit(expression[i])) {
push(&s, expression[i] - '0');
} else {
int val1 = pop(&s);
int val2 = pop(&s);
switch (expression[i]) {
case '+': push(&s, val2 + val1); break;
case '-': push(&s, val2 - val1); break;
case '*': push(&s, val2 * val1); break;
case '/': push(&s, val2 / val1); break;
}
}
}
return pop(&s);
}
int main() {
char expression[100];
printf("Enter a postfix expression: ");
scanf("%s", expression);
printf("Postfix Expression: %s\n", expression);
printf("Result: %d\n", evaluatePostfix(expression));
return 0;
}
